@Library('pipelib@master') _

def THREADFIX_ID = env.THREADFIX_ID ? env.THREADFIX_ID : '115'

node {
  def root = pwd()

  stage('Setup') {
    git([
      url: env.GIT_URL ? env.GIT_URL : 'https://github.com/venicegeo/dg-pz-logger',
      branch: "master"
    ])
  }

  stage('Archive') {
    withGolang {
      sh """
        go get github.com/braintree/manners
        go get github.com/gin-gonic/gin
        go get github.com/stretchr/testify/assert
        go get gopkg.in/olivere/elastic.v3
        go get github.com/Shopify/sarama
        go get github.com/venicegeo/dg-pz-gocommon/gocommon
        go get github.com/venicegeo/dg-pz-logger

        cd \$GOPATH/src/github.com/venicegeo/dg-pz-logger

        go test -v github.com/venicegeo/dg-pz-logger/logger

        go build
        cp dg-pz-logger ${root}/pz-logger
        cd ${root}

        tar -cvzf pz-logger.tgz \
            pz-logger
      """
    }
  }

  stage('CI Deploy') {
    cfPush()
  }

  stage('Cleanup') {
    deleteDir()
  }
}
